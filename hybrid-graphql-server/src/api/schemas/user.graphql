type User {
  user_id: ID!
  username: String!
  email: String!
  level_name: String!
  created_at: String!
}

type UserResponse {
  user: User!
  message: String!
}

type LoginResponse {
  message: String
  token: String
  user: User
  user_id: ID
  username: String
  email: String
  created_at: String
}

type UserDeleteResponse {
  message: String!
  user: User
}

type Query {
  users: [User]
  user(user_id: ID!): User
  checkToken: User
  checkEmail(email: String!): Boolean
  checkUsername(username: String!): Boolean
}

input UserInput {
  username: String! @constraint(minLength: 3, maxLength: 255)
  email: String! @constraint(format: "email", maxLength: 255)
  password: String! @constraint(minLength: 5)
}

type Mutation {
  createUser(input: UserInput!): UserResponse
  login(username: String!, password: String!): LoginResponse
  updateUser(input: UserInput!): User
  deleteUser: UserDeleteResponse
}
